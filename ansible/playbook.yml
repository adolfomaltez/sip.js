##################################################
# Playbook: PoC Asterisk + sip.js
##################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    - name: Set timezone 
      copy: content='America/El_Salvador'
            dest=/etc/timezone
            owner=root
            group=root
            mode=0644
            backup=yes
      #notify:
      #  - update timezone
  #handlers:

    - name: Update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata

    - name: Actualizar paquetes
      apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
      loop: [ 'aptitude' ]

    - name: Install stack packages 
      apt: name={{ item }} update_cache=yes state=latest
      loop: [ 'asterisk', 'asterisk-modules', 'asterisk-core-sounds-es', 'nginx', 'git', 'npm', 'php-fpm' ]

# Copiar certificados
    - name: Crear directorio para certificados
      file:
        path: /etc/asterisk/keys
        state: directory
        mode: '0755'

    - name: Copiar certificados validos
      copy:
        src: "files/certs"
        dest: "/etc/asterisk/keys"

# Configurar Asterisk para soporte WebRTC

# Configurar nombre del hosts

# Configurar sip.conf

# Configurar clientes SIP (2 WebRTC SIP y 2 non-WebRTC SIP)


# Configurar extensions.conf

# Reiniciar Asterisk



# Instalacion y configuracion de Nginx


# Configurar virtualhost nginx ssl


# habilitar el VirtualHost


# Instalar npm


# Clonar proyecto sip.js y compilar los demos


# instalar php7.3 y postgresql-11



